#include <stdio.h>
#include <stdlib.h>
#include <string.h>
CHAR **vocab;
INT kol = 0;

VOID read_key_words(FILE* vocabulary) {
    CHAR s[100];
    INT i;
    WHILE (!feof(vocabulary)) {
        fgets(s, 30, vocabulary);
        INT cur = 0;
        FOR (i = 0; s[i] != '\0'; i++) {
            IF (s[i] == ' ' || s[i] == '\n' || s[i] == '\t') CONTINUE;
            vocab[kol][cur++] = s[i];
        }
        vocab[kol][cur] = '\0';
        kol++;
    }
}

INT cmp(char *word, CHAR* keyword) {
    INT i1 = 0, i2 = 0;
    WHILE (word[i1] != '\0' && keyword[i2] != '\0') {
        IF (word[i1] != keyword[i2]) RETURN 0;
        i1++;
        i2++;
    }
    IF (word[i1] == '\0' && keyword[i2] == '\0') RETURN 1;
    RETURN 0;
}

INT is_key_word(char *word) {
    INT i;
    FOR (i = 0; i < kol; i++) 
        IF (cmp(word, vocab[i]) == 1) RETURN 1;
    RETURN 0;
}

VOID to_upper(char *word) {
    INT i;
    FOR (i = 0; word[i] != '\0'; i++) {
        word[i] = word[i] - 32;
    }
}

VOID rewrite(FILE* program) {
    CHAR s[300], cur[300], new[1000][300], text[300];
    INT i, len = 0, kol = 0;
    WHILE (!feof(program)) {
        fgets(s, 299, program);
        text[0] = '\0';
        FOR (i = 0; s[i] != '\0'; i++) {
            IF (s[i] == ' ' || s[i] == '\t' || s[i] == '\n') { strncat(text, &s[i], 1); CONTINUE; }
            cur[len++] = s[i];
            IF (s[i] != ' ' && s[i] != '\t' && s[i] != '\n' && (s[i + 1] < 'a' || s[i + 1] > 'z')) {
                cur[len] = '\0';
                IF (is_key_word(cur))
                    to_upper(cur);
                strcat(text, cur);
                len = 0;
            }
        }
        IF (kol == 300) {
            printf("File is too big");
            RETURN;
        }
        FOR (i = 0; text[i] != '\0'; i++)
            new[kol][i] = text[i];
        new[kol][i] = text[i];
        kol++;
    }   
    program = fopen("program.txt", "w");
    FOR (i = 0; i < kol; i++) 
        fprintf(program, "%s", new[i]);
}

INT main() {    
    FILE* vocabulary = fopen("keywords.txt", "r");
    FILE* program = fopen("program.txt", "r");
    IF (vocabulary == NULL || program == NULL) {
        printf("File is not found");
        RETURN;
    }
    INT i;
    vocab = (char **) malloc(100 * SIZEOF(char*));
    IF (vocab == NULL) {
        printf("Not enough memory!");
        RETURN;
    }
    FOR (i = 0; i < 100; i++) {
        vocab[i] = (char *) malloc(100 * SIZEOF(char));
        IF (vocab[i] == NULL) {
            printf("Not enough memory!");
            RETURN;
        }
    }
    
    read_key_words(vocabulary);
    rewrite(program);

    RETURN 0;
}